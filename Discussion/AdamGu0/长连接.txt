	在我们的项目中，使用的是Java原生的Socket类来实现服务端和客户端的连接。具体实现时，
服务端的ServerSocket类会在登陆时为每个客户端分配一个Socket，通过该Socket与客户端进行后续的
所有通信。所以，我们的实现本身就是长连接。
	当然，我们的实现没有考虑不稳定网络，而且操作系统本身也可能将长期无通信的连接关闭。
所以，我们的实现目前无法保持长期连接。这就需要用到心跳机制了。我的设想是每隔1分钟，客户端
向服务端发送一个询问消息，服务端收到后回复该询问。（由客户端发起的查询可以互相异步，避免了
占用大量带宽。）对于客户端，连续两次询问后没回复（容忍不稳定网络），可认定为连接丢失。对于
服务端，可以建立一个线程，每分钟把收到的所有客户端的询问消息检查一次，如果某个客户端2分钟
内没有消息，可认定为连接丢失。另外，服务端和客户端相互发送消息时，对方如果连续两次没有回复，
也认定为连接丢失。